const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL,
    process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function createSimpleTestScenario() {
    console.log('üéØ Iniciando creaci√≥n de escenario de prueba simplificado...');
    
    try {
        // 1. Obtener el usuario actual
        const { data: { users }, error: usersError } = await supabase.auth.admin.listUsers();
        if (usersError || !users.length) {
            throw new Error('No se encontr√≥ usuario: ' + (usersError?.message || 'Lista vac√≠a'));
        }
        
        const userId = users[0].id;
        console.log('‚úÖ Usuario encontrado:', userId);

        // 2. Crear cliente simple
        const clientData = {
            user_id: userId,
            name: 'Mar√≠a Gonz√°lez Garc√≠a',
            email: 'maria.gonzalez@techsolutions.com',
            phone: '+34 666 777 888',
            company: 'TechSolutions Madrid S.L.',
            address: 'Calle Gran V√≠a 45, 3¬∫ B, 28013 Madrid',
            status: 'active'
        };

        const { data: client, error: clientError } = await supabase
            .from('clients')
            .upsert(clientData, { onConflict: 'email' })
            .select()
            .single();

        if (clientError) throw new Error('Error creando cliente: ' + clientError.message);
        console.log('‚úÖ Cliente creado:', client.name);

        // 3. Crear proyecto
        const projectData = {
            user_id: userId,
            client_id: client.id,
            name: 'Plataforma E-commerce Completa con IA',
            description: 'Desarrollo de una plataforma de comercio electr√≥nico completa con funcionalidades de IA para recomendaciones personalizadas, chatbot de atenci√≥n al cliente, an√°lisis predictivo de ventas y sistema de gesti√≥n de inventario automatizado.',
            status: 'in_progress',
            priority: 'high',
            budget: 45000,
            currency: 'EUR',
            estimated_hours: 320,
            start_date: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
            end_date: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000).toISOString(),
            progress: 35
        };

        const { data: project, error: projectError } = await supabase
            .from('projects')
            .insert(projectData)
            .select()
            .single();

        if (projectError) throw new Error('Error creando proyecto: ' + projectError.message);
        console.log('‚úÖ Proyecto creado:', project.name);

        // 4. Crear tareas con problemas potenciales
        const tasksData = [
            {
                user_id: userId,
                project_id: project.id,
                title: 'Integraci√≥n API de Recomendaciones IA',
                description: 'Implementar sistema de machine learning para recomendaciones personalizadas usando TensorFlow',
                status: 'in_progress',
                priority: 'high',
                due_date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(), // VENCIDA
                estimated_hours: 40,
                actual_hours: 45
            },
            {
                user_id: userId,
                project_id: project.id,
                title: 'Configuraci√≥n Sistema de Pagos',
                description: 'Integrar Stripe, PayPal y Bizum. Sistema de reembolsos autom√°ticos',
                status: 'pending',
                priority: 'high',
                due_date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
                estimated_hours: 25,
                actual_hours: 0
            },
            {
                user_id: userId,
                project_id: project.id,
                title: 'Testing de Seguridad Completo',
                description: 'Auditor√≠a de seguridad, penetration testing, validaci√≥n GDPR',
                status: 'pending',
                priority: 'medium',
                due_date: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
                estimated_hours: 30,
                actual_hours: 0
            }
        ];

        const { data: tasks, error: tasksError } = await supabase
            .from('tasks')
            .insert(tasksData)
            .select();

        if (tasksError) throw new Error('Error creando tareas: ' + tasksError.message);
        console.log('‚úÖ Tareas creadas:', tasks.length);

        // 5. Crear propuesta
        const proposalData = {
            user_id: userId,
            client_id: client.id,
            title: 'Expansi√≥n Sistema E-commerce: M√≥dulo B2B y Analytics Avanzados',
            description: `Propuesta para la segunda fase del proyecto de e-commerce, incluyendo:

**M√ìDULO B2B EMPRESARIAL:**
- Portal dedicado para clientes corporativos
- Sistema de cotizaciones autom√°ticas
- Gesti√≥n de descuentos por volumen
- Dashboard de compras corporativas

**ANALYTICS E INTELIGENCIA DE NEGOCIO:**
- Dashboard ejecutivo con KPIs en tiempo real
- An√°lisis predictivo de demanda
- Segmentaci√≥n autom√°tica de clientes
- Reportes de rentabilidad por producto

**OPTIMIZACIONES ADICIONALES:**
- Implementaci√≥n de PWA (Progressive Web App)
- Optimizaci√≥n SEO t√©cnico avanzado
- Sistema de reviews y reputaci√≥n
- Chatbot con IA conversacional (GPT-4)

**CRONOGRAMA:** 3 meses | **GARANT√çA:** 12 meses soporte`,
            value: 28500,
            currency: 'EUR',
            status: 'pending',
            valid_until: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000).toISOString(),
            terms: 'Condiciones de pago: 40% al inicio, 40% a mitad de proyecto, 20% al finalizar. Incluye 3 revisiones por m√≥dulo.'
        };

        const { data: proposal, error: proposalError } = await supabase
            .from('proposals')
            .insert(proposalData)
            .select()
            .single();

        if (proposalError) throw new Error('Error creando propuesta: ' + proposalError.message);
        console.log('‚úÖ Propuesta creada:', proposal.title);

        // 6. Crear conversaci√≥n realista
        const messagesData = [
            {
                user_id: userId,
                client_id: client.id,
                message: 'Buenos d√≠as Mar√≠a, espero que hayas tenido un buen fin de semana. Te escribo para hacer seguimiento del proyecto de e-commerce. Hemos completado el 35% seg√∫n lo planificado, pero me gustar√≠a comentarte algunos puntos importantes sobre el desarrollo.',
                sender: 'freelancer',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: 'Hola! S√≠, gracias. Me alegra saber que vamos seg√∫n el cronograma. ¬øQu√© puntos quer√≠as comentar? Espero que no sean problemas graves...',
                sender: 'client',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000 + 2 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: `No son problemas graves, pero s√≠ situaciones que debemos gestionar proactivamente:

1. **API de Recomendaciones**: La integraci√≥n con TensorFlow est√° siendo m√°s compleja de lo previsto. Necesitamos 1 semana adicional para optimizar el rendimiento.

2. **Pasarelas de Pago**: Stripe ha actualizado su API y requiere cambios en nuestra implementaci√≥n. Ya estamos trabajando en ello.

3. **Oportunidad de Mejora**: He identificado una optimizaci√≥n que podr√≠a reducir los tiempos de carga en un 40%, pero requiere refactorizar parte del c√≥digo del carrito.

¬øPodr√≠amos programar una call esta semana para revisar todo en detalle?`,
                sender: 'freelancer',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000 + 3 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: `Me preocupa un poco el tema de la semana adicional... Ya sabes que tenemos una fecha l√≠mite muy ajustada para el lanzamiento en Black Friday. El equipo directivo est√° muy pendiente de este proyecto.

¬øEsa semana adicional afectar√≠a al cronograma general? ¬øY cu√°nto costar√≠a la optimizaci√≥n del carrito que mencionas?

Podemos hacer la call el mi√©rcoles a las 10:00. Por favor, trae propuestas concretas.`,
                sender: 'client',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: `Entiendo perfectamente tu preocupaci√≥n, Mar√≠a. D√©jame tranquilizarte con datos concretos:

**CRONOGRAMA:**
- La semana adicional NO afecta la fecha de lanzamiento
- Podemos paralelizar tareas para recuperar tiempo
- Mantenemos el objetivo de Black Friday

**OPTIMIZACI√ìN DEL CARRITO:**
- Inversi√≥n: 8 horas de desarrollo (incluidas en presupuesto)
- ROI: Reducci√≥n 40% tiempo carga = +15% conversiones estimadas

Perfecto para el mi√©rcoles 10:00. ¬øZoom o presencial?`,
                sender: 'freelancer',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000 + 4 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: `Zoom est√° bien. Me tranquiliza tu enfoque proactivo.

Una pregunta: hemos estado pensando en a√±adir un sistema de reviews con IA para analizar sentiment autom√°ticamente. ¬øSer√≠a posible incluirlo en esta fase o lo dejamos para la siguiente?

Tambi√©n, el CFO quiere saber si hay posibilidad de alg√∫n descuento por el volumen de trabajo que estamos manejando...`,
                sender: 'client',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: `Excelente pregunta sobre el sistema de reviews con IA. Es factible y muy valioso:

**SISTEMA DE REVIEWS + IA:**
- An√°lisis de sentiment autom√°tico
- Detecci√≥n de reviews falsas
- Categorizaci√≥n autom√°tica por topics
- Estimaci√≥n: 12 horas (1.020‚Ç¨)

**SOBRE EL DESCUENTO:**
Reconociendo vuestra confianza y el volumen de proyectos:
- 5% descuento en facturaci√≥n restante del proyecto actual
- 10% descuento garantizado en la propuesta B2B que os envi√©

¬øOs parece una propuesta justa?`,
                sender: 'freelancer',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000 + 6 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: `¬°Perfecto! Me parece una propuesta muy razonable. El sistema de reviews con IA nos interesa mucho, creo que ser√° un diferenciador importante.

He comentado los descuentos con el CFO y est√° de acuerdo. Tambi√©n est√° muy interesado en la propuesta B2B que mencionas.

Nos vemos el mi√©rcoles a las 10:00. ¬°Gracias por la gesti√≥n tan profesional del proyecto!`,
                sender: 'client',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: `Update post-reuni√≥n:

‚úÖ **COMPLETADO ESTA SEMANA:**
- Integraci√≥n Stripe y PayPal al 100%
- Optimizaci√≥n del carrito implementada (-38% tiempo carga)
- Testing de seguridad b√°sico completado

üîÑ **EN PROGRESO:**
- Sistema de reviews con IA (60% completado)
- M√≥dulo de recomendaciones (recuperando timeline)

üìÖ **PR√ìXIMA SEMANA:**
- Demo funcional completa para stakeholders

Todo seg√∫n lo acordado. ¬°El proyecto va viento en popa! üöÄ`,
                sender: 'freelancer',
                message_type: 'text',
                is_read: true,
                created_at: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString()
            },
            {
                user_id: userId,
                client_id: client.id,
                message: `Excelente progreso! El equipo directivo est√° muy contento con los avances.

La mejora en los tiempos de carga ya la hemos notado en las pruebas internas. Impresionante trabajo.

Para la demo de la pr√≥xima semana, ¬øpodr√≠amos incluir tambi√©n una preview del m√≥dulo B2B? Aunque sea b√°sica, creo que ayudar√≠a a acelerar la aprobaci√≥n del presupuesto.

¬°Sigamos as√≠! üí™`,
                sender: 'client',
                message_type: 'text',
                is_read: false,
                created_at: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString()
            }
        ];

        const { data: messages, error: messagesError } = await supabase
            .from('freelancer_messages')
            .insert(messagesData)
            .select();

        if (messagesError) throw new Error('Error creando mensajes: ' + messagesError.message);
        console.log('‚úÖ Mensajes creados:', messages.length);

        // Resumen final
        console.log('\nüéâ ¬°ESCENARIO DE PRUEBA COMPLETO CREADO EXITOSAMENTE!');
        console.log('');
        console.log('üìä RESUMEN DE DATOS CREADOS:');
        console.log(`   üë§ Cliente: ${client.name} (${client.company})`);
        console.log(`   üèóÔ∏è  Proyecto: ${project.name} (${project.progress}% completado)`);
        console.log(`   üìã Propuesta: ${proposal.title} (‚Ç¨${proposal.value})`);
        console.log(`   üí¨ Conversaci√≥n: ${messages.length} mensajes intercambiados`);
        console.log(`   ‚úÖ Tareas: ${tasks.length} tareas del proyecto (1 vencida)`);
        console.log('');
        console.log('üéØ AUTOMATIZACIONES LISTAS PARA PROBAR:');
        console.log('   ‚ö†Ô∏è  Detector de Riesgos ‚Üí Seleccionar "Mar√≠a Gonz√°lez" ‚Üí "Plataforma E-commerce"');
        console.log('   üìä Analizador de Propuestas ‚Üí Seleccionar "Mar√≠a Gonz√°lez" ‚Üí "Expansi√≥n Sistema E-commerce"');
        console.log('   üß† An√°lisis de Conversaci√≥n ‚Üí Seleccionar "Mar√≠a Gonz√°lez"');
        console.log('   üé≠ An√°lisis de Sentimiento ‚Üí Copiar √∫ltimo mensaje del cliente (muy positivo)');
        console.log('   üí¨ Optimizaci√≥n de Comunicaci√≥n ‚Üí Crear respuesta al √∫ltimo mensaje');
        console.log('');
        console.log('‚ú® Los datos incluyen:');
        console.log('   ‚Ä¢ Proyecto con tareas vencidas (riesgo alto)');
        console.log('   ‚Ä¢ Conversaci√≥n con negociaci√≥n y resoluci√≥n exitosa');
        console.log('   ‚Ä¢ Propuesta compleja con m√∫ltiples m√≥dulos');
        console.log('   ‚Ä¢ Cliente satisfecho pero con presi√≥n temporal');

    } catch (error) {
        console.error('‚ùå Error creando escenario de prueba:', error.message);
        console.error('Stack:', error.stack);
        process.exit(1);
    }
}

createSimpleTestScenario();
