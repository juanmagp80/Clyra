import { createClient } from '@supabase/supabase-js';
import { createBrowserClient, createServerClient } from '@supabase/ssr';
import { cookies } from 'next/headers';

// Variables de entorno
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;

// Cliente básico de Supabase (solo para operaciones simples sin auth)
export const supabase = createClient(supabaseUrl, supabaseAnonKey);

// Cliente de Supabase para componentes de cliente (navegador)
export const createSupabaseClient = () => {
  return createBrowserClient(supabaseUrl, supabaseAnonKey);
};

// Cliente de Supabase para componentes de servidor
export const createServerSupabaseClient = async () => {
  const cookieStore = await cookies();
  
  return createServerClient(supabaseUrl, supabaseAnonKey, {
    cookies: {
      getAll() {
        return cookieStore.getAll();
      },
      setAll(cookiesToSet) {
        try {
          cookiesToSet.forEach(({ name, value, options }) => {
            cookieStore.set(name, value, options);
          });
        } catch {
          // El método `setAll` fue llamado desde un Server Component.
          // Esto puede ser ignorado si tienes middleware manejando esto.
        }
      },
    },
  });
};
